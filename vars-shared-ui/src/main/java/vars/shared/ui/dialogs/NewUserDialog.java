/*
 * NewUserDialog.java
 *
 * Created on May 19, 2006, 9:12 AM
 */

package vars.shared.ui.dialogs;

import java.awt.Frame;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.mbari.swing.JFancyButton;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import vars.MiscDAOFactory;
import vars.MiscFactory;
import vars.UserAccount;
import vars.UserAccountDAO;
import vars.UserAccountRoles;
import vars.shared.ui.GlobalLookup;

/**
 *
 * @author  brian
 */
public class NewUserDialog extends javax.swing.JDialog {
    

    private final Logger log = LoggerFactory.getLogger(NewUserDialog.class);
    private static final long serialVersionUID = -4959276001824698570L;
    private UserAccount returnValue;
    private final MiscDAOFactory miscDAOFactory;
    private final MiscFactory miscFactory;

    /** Creates new form NewUserDialog */
    public NewUserDialog(java.awt.Frame parent, boolean modal, MiscDAOFactory miscDAOFactory, MiscFactory miscFactory) {
        super(parent, modal);
        this.miscDAOFactory = miscDAOFactory;
        this.miscFactory = miscFactory;
        initComponents();
        initModel();
        Frame frame = (Frame) GlobalLookup.getSelectedFrameDispatcher().getValueObject();
        setLocationRelativeTo(frame);
        pack();
    }
    
    public static UserAccount showDialog(Frame parent, boolean modal, String title, MiscDAOFactory miscDAOFactory, MiscFactory miscFactory) {
        NewUserDialog dialog = new NewUserDialog(parent, modal, miscDAOFactory, miscFactory);
        dialog.setTitle(title);
        dialog.setVisible(true);
        return dialog.returnValue;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        topLabel = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancelButton = new JFancyButton();
        okButton = new JFancyButton();
        pwd2Field = new javax.swing.JPasswordField();
        pwd1Field = new javax.swing.JPasswordField();
        nameField = new javax.swing.JTextField();
        msgLabel = new javax.swing.JLabel();

        setTitle("VARS - Create a New User Account");
        topLabel.setColumns(20);
        topLabel.setWrapStyleWord(true);
        topLabel.setLineWrap(true);
        topLabel.setEditable(false);
        topLabel.setRows(5);
        topLabel.setText("Create a new user. By default, a new user is read-only. This allows you to create annotations, but you can not modify the knowledgebase. Contact a VARS aministrator to change your privelages is you need to edit the knowledgebase.");
        jScrollPane1.setViewportView(topLabel);

        jLabel1.setText("Name:");

        jLabel2.setText("Password:");

        jLabel3.setText("Password:");

        cancelButton.setText("Cancel");
        cancelButton.setIcon(new ImageIcon(getClass().getResource("/images/vars/annotation/delete2.png")));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        cancelButton.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cancelButtonKeyReleased(evt);
            }
        });

        okButton.setText("OK");
        okButton.setIcon(new ImageIcon(getClass().getResource("/images/vars/annotation/check2.png")));
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okButton.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                okButtonKeyReleased(evt);
            }
        });

        msgLabel.setForeground(new java.awt.Color(204, 0, 0));
        msgLabel.setText(" ");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(msgLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pwd2Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(okButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pwd1Field, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .add(nameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(pwd1Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(pwd2Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(msgLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 22, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_okButtonKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            okButtonActionPerformed(null);
        }
    }//GEN-LAST:event_okButtonKeyReleased

    private void cancelButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelButtonKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cancelButtonActionPerformed(null);
        }
    }//GEN-LAST:event_cancelButtonKeyReleased

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        UserAccount userAccount = null;
        String userName = nameField.getText();
        String pwd1 = new String(pwd1Field.getPassword());
        String pwd2 = new String(pwd2Field.getPassword());
        exit: {
            
            if (pwd1.equals(pwd2)) {
                UserAccountDAO userAccountDAO = miscDAOFactory.newUserAccountDAO();
                userAccountDAO.startTransaction();
                try {

                    userAccount = userAccountDAO.findByUserName(userName);
                } catch (Exception ex) {
                    msgLabel.setText("An error occured while connecting to the database");
                    log.warn("An error occured while looking up " + userName, ex);
                }
                if (userAccount != null) {
                    msgLabel.setText("That name already exists in the database");
                    break exit;
                }
                else {
                    userAccount = miscFactory.newUserAccount();
                    userAccount.setUserName(userName);
                    userAccount.setPassword(pwd1);
                    userAccount.setRole(UserAccountRoles.MAINTENANCE.toString());
                    try {
                        userAccountDAO.persist(userAccount);
                        setVisible(false);
                    } catch (Exception ex) {
                        msgLabel.setText("Unable to insert a new user into the database");
                        log.warn("An error occured while inserting " + userName + " into the database", ex);

                        break exit;
                    }
                    finally {
                        userAccountDAO.endTransaction();
                    }
                }
            }
            else {
                msgLabel.setText("The passwords do not match");
            }
            
        }
        
        returnValue = userAccount;
        
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);

    }//GEN-LAST:event_cancelButtonActionPerformed
    
    @Override
    public void setVisible(boolean b) {
        nameField.setText("");
        pwd1Field.setText("");
        pwd2Field.setText("");
        msgLabel.setText(" ");
        super.setVisible(b);
    }
    
    private void initModel() {
        nameField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                update();
            }
            public void insertUpdate(DocumentEvent e) {
                update();
            }
            public void removeUpdate(DocumentEvent e) {
                update();
            }
            
            void update() {
                String text = nameField.getText();
                okButton.setEnabled(text != null && text.length() > 0 && !text.matches("\\A\\s+"));
            }
            
        });
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
	 * @uml.property  name="cancelButton"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JButton cancelButton;
    /**
	 * @uml.property  name="jLabel1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel jLabel1;
    /**
	 * @uml.property  name="jLabel2"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel jLabel2;
    /**
	 * @uml.property  name="jLabel3"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel jLabel3;
    /**
	 * @uml.property  name="jScrollPane1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JScrollPane jScrollPane1;
    /**
	 * @uml.property  name="msgLabel"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel msgLabel;
    /**
	 * @uml.property  name="nameField"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JTextField nameField;
    /**
	 * @uml.property  name="okButton"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JButton okButton;
    /**
	 * @uml.property  name="pwd1Field"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JPasswordField pwd1Field;
    /**
	 * @uml.property  name="pwd2Field"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JPasswordField pwd2Field;
    /**
	 * @uml.property  name="topLabel"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JTextArea topLabel;
    // End of variables declaration//GEN-END:variables
    
}
