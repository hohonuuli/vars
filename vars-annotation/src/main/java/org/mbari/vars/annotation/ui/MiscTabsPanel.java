/*
 * Copyright 2005 MBARI
 *
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1
 * (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.gnu.org/copyleft/lesser.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
Created on October 30, 2003, 2:11 PM
 */
package org.mbari.vars.annotation.ui;

import java.awt.Component;
import javax.swing.JTabbedPane;
import javax.swing.JTree;
import javax.swing.tree.TreeModel;
import org.jdesktop.swingx.JXTree;
import org.mbari.swing.SearchableTreePanel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import vars.annotation.ui.Toolbelt;
import vars.shared.ui.UIDecorator;
import vars.shared.ui.tree.ConceptTreeCellRenderer;
import vars.shared.ui.tree.ConceptTreeModel;
import vars.shared.ui.tree.JTreeDragAndDropDecorator;

/**
 * <p>JPanel that contains various tabbed panes used in the annotation
 * application. These tabbed panesl include the frame-grab and
 * knowledgebase tabs.</p>
 *
 * @author  <a href="http://www.mbari.org">MBARI</a>
 * @version  $Id: MiscTabsPanel.java 376 2006-10-26 18:21:43Z hohonuuli $
 */
public class MiscTabsPanel extends javax.swing.JPanel {


    private final Logger log = LoggerFactory.getLogger(getClass());

    private javax.swing.JTabbedPane tabbedPane;

    private SearchableTreePanel treePanel;

    private final Toolbelt toolbelt;

    /** We don't read this but we hang on to a reference to prevent garbage collection */
    private UIDecorator treeDecorator;

    /**
     * Creates new form MiscTabsPanel
     */
    public MiscTabsPanel(Toolbelt toolbelt) {
        this.toolbelt = toolbelt;
        initComponents();
        initTabs();
    }

    /**
     *     @return  Returns the treePanel.
     *     @uml.property  name="treePanel"
     */
    public SearchableTreePanel getTreePanel() {
        if (treePanel == null) {
            treePanel = new SearchableTreePanel();
            final TreeModel treeModel = new ConceptTreeModel(toolbelt.getKnowledgebaseDAOFactory());
            final JTree tree = new JXTree(treeModel);
            tree.setCellRenderer(new ConceptTreeCellRenderer());
            treeDecorator = new JTreeDragAndDropDecorator(tree);
        }

        return treePanel;
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        // GEN-BEGIN:initComponents
        tabbedPane = new JTabbedPane();
        setLayout(new java.awt.BorderLayout());
        addComponentListener(new java.awt.event.ComponentAdapter() {

            @Override
            public void componentResized(final java.awt.event.ComponentEvent evt) {
                resizeHandler(evt);
            }
        });
        add(tabbedPane, java.awt.BorderLayout.CENTER);
    }

    /**
     * <p><!-- Method description --></p>
     *
     */
    private void initTabs() {
        tabbedPane.add("Frame-grab", new FrameGrabPanel());
        tabbedPane.add("Observation", new PObservationPanel());
        tabbedPane.add("Video Archive", new PVideoArchivePanel());
        tabbedPane.add("Physical Data", new PPhysicalDataPanel());
        tabbedPane.add("Camera Data", new PCameraDataPanel());
        tabbedPane.add("Knowledge Base", getTreePanel());
    }

    // GEN-END:initComponents

    /**
     * <p><!-- Method description --></p>
     *
     *
     * @param evt
     */
    private void resizeHandler(final java.awt.event.ComponentEvent evt) {

        // GEN-FIRST:event_resizeHandler
        tabbedPane.setSize(getSize());
        final Component[] cs = tabbedPane.getComponents();
        for (int i = 0; i < cs.length; i++) {
            cs[i].setSize(getSize());
        }
    }

}
