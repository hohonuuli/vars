/*
 * AddConceptNameDialog2.java
 *
 * Created on May 18, 2006, 4:08 PM
 */

package vars.knowledgebase.ui.dialogs;

import foxtrot.Job;
import foxtrot.Worker;
import foxtrot.Task;

import java.awt.Frame;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.mbari.swing.JFancyButton;
import org.mbari.swing.WaitIndicator;
import org.mbari.swing.SpinningDialWaitIndicator;
import org.mbari.vars.dao.DAOException;
import org.mbari.vars.knowledgebase.model.Concept;
import org.mbari.vars.knowledgebase.model.ConceptName;
import org.mbari.vars.knowledgebase.model.History;
import org.mbari.vars.knowledgebase.model.HistoryFactory;
import org.mbari.vars.knowledgebase.model.dao.ConceptDAO;
import org.mbari.vars.knowledgebase.model.dao.KnowledgeBaseCache;
import org.mbari.vars.knowledgebase.ui.KnowledgebaseApp;
import org.mbari.vars.knowledgebase.ui.KnowledgebaseFrame;
import org.mbari.vars.knowledgebase.ui.actions.ApproveHistoryTask;
import org.mbari.vars.model.UserAccount;
import org.mbari.vars.util.AppFrameDispatcher;
import vars.knowledgebase.IHistory;

/**
 *
 * @author  brian
 */
public class AddConceptNameDialog2 extends javax.swing.JDialog {

    private static final long serialVersionUID = 530633107360033281L;
    /**
	 * @uml.property  name="concept"
	 * @uml.associationEnd  
	 */
    private Concept concept;
    private static final Logger log = LoggerFactory.getLogger(AddConceptNameDialog2.class);
    
    /** Creates new form AddConceptNameDialog2 */
    public AddConceptNameDialog2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initModel();
        setLocationRelativeTo(AppFrameDispatcher.getFrame());
        pack();
    }
    
    private void initModel() {
        nameField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                update();
            }
            public void insertUpdate(DocumentEvent e) {
                update();
            }
            public void removeUpdate(DocumentEvent e) {
                update();
            }
            
            void update() {
                String text = nameField.getText();
                okButton.setEnabled(text != null && text.length() > 0 && !text.matches("\\A\\s+"));
            }
            
        });
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        authorField = new javax.swing.JTextField();
        commonRb = new javax.swing.JRadioButton();
        synonymRb = new javax.swing.JRadioButton();
        cancelButton = new JFancyButton();
        okButton = new JFancyButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        msgLabel = new javax.swing.JLabel();

        setTitle("VARS - Add Concept Name");
        setResizable(false);
        jLabel2.setText("Name:");

        jLabel3.setText("Author:");

        jLabel4.setText("Type:");

        nameField.setToolTipText("The name to store in the database");

        authorField.setToolTipText("An author that described this name in the literature");

        buttonGroup1.add(commonRb);
        commonRb.setText("Common");
        commonRb.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        commonRb.setMargin(new java.awt.Insets(0, 10, 0, 0));

        buttonGroup1.add(synonymRb);
        synonymRb.setText("Synonym");
        synonymRb.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        synonymRb.setMargin(new java.awt.Insets(0, 10, 0, 0));

        cancelButton.setText("Cancel");
        cancelButton.setIcon(new ImageIcon(getClass().getResource("/images/vars/knowledgebase/delete2.png")));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        cancelButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cancelButtonKeyReleased(evt);
            }
        });

        okButton.setText("OK");
        okButton.setIcon(new ImageIcon(getClass().getResource("/images/vars/knowledgebase/check2.png")));
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                okButtonKeyReleased(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setLineWrap(true);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setText("Add a concept name. Enter a name, author and the type of name. ");
        jScrollPane1.setViewportView(jTextArea1);

        msgLabel.setForeground(new java.awt.Color(153, 0, 0));
        msgLabel.setText(" ");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(msgLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jLabel4)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(commonRb)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(synonymRb))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, authorField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .add(nameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(okButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(authorField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(commonRb)
                    .add(synonymRb))
                .add(17, 17, 17)
                .add(msgLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void setVisible(boolean b) {
        if (b) {
            nameField.requestFocus();
            commonRb.setSelected(true);
        }
        super.setVisible(b);
    }

    private void cancelButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelButtonKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cancelButtonActionPerformed(null);
        }
    }//GEN-LAST:event_cancelButtonKeyReleased

    private void okButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_okButtonKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            okButtonActionPerformed(null);
        }
    }//GEN-LAST:event_okButtonKeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        close();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        final String name = nameField.getText();
        final Concept concept = getConcept();
        boolean okToProceed = true;

        /*
         * Verify that the name is not already used in the database.
         */
        Concept preexistingConcept = null;
        try {
            preexistingConcept = (Concept) Worker.post(new Task(){
                public Object run() throws DAOException {
                    return KnowledgeBaseCache.getInstance().findConceptByName(name);
                }
            });
        }
        catch (Exception e) {
            if (log.isErrorEnabled()) {
                log.error("Failed attempt to look up the concept '" + name + "'", e);
                msgLabel.setText("Failed to connect to database");
            }
            okToProceed = false;
        }


        if (okToProceed && (preexistingConcept != null)) {
            String preexistingName = preexistingConcept.getPrimaryConceptNameAsString();
            msgLabel.setText("The name, " + preexistingName + ", already exits in the knowledgebase");
            okToProceed = false;
        }

        if (okToProceed) {

            /*
             * Creat the new conceptName
             */
            ConceptName conceptName = new ConceptName();
            conceptName.setName(nameField.getText());
            conceptName.setAuthor(authorField.getText());
            String nameType = ConceptName.NAMETYPE_COMMON;
            if (synonymRb.isSelected()) {
                nameType = ConceptName.NAMETYPE_SYNONYM;
            }

            conceptName.setNameType(nameType);
            concept.addConceptName(conceptName);

            /*
             * Add a History object to track the change.
             */
            final UserAccount userAccount = (UserAccount) KnowledgebaseApp.DISPATCHER_USERACCOUNT.getValueObject();
            final IHistory history = HistoryFactory.add(userAccount, conceptName);
            concept.addHistory(history);

            close();
            /*
             * Store the new name in the database.
             */
            WaitIndicator waitIndicator = new SpinningDialWaitIndicator((JFrame) getParent());

            try {
                Worker.post(new Task() {
                    public Object run() throws DAOException {
                        if (userAccount.isAdmin()) {
                            ApproveHistoryTask.approve(userAccount, history);
                        }
                        else {
                            ConceptDAO.getInstance().update(concept);
                        }
                        return null;
                    }
                });
            }
            catch (DAOException e) {
                concept.removeConceptName(conceptName);
                concept.removeHistory(history);
                log.error("Failed to update " + concept, e);
                AppFrameDispatcher.showErrorDialog(
                        "Failed to save" +
                        " changes. Rolling back to previous state");
            }
            catch (Exception e) {
                log.error("Failed to approve and update " + concept, e);
                AppFrameDispatcher.showErrorDialog("Failed to approve and update " + concept);
            }
            waitIndicator.dispose();
            final Frame frame = AppFrameDispatcher.getFrame();
            if ((frame != null) && (frame instanceof KnowledgebaseFrame)) {
                    ((KnowledgebaseFrame) frame).refreshTreeAndOpenNode(concept.getPrimaryConceptNameAsString());
            }

        }
        
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void close() {
        setVisible(false);
        nameField.setText("");
        msgLabel.setText("");
        authorField.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddConceptNameDialog2(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
	 * @uml.property  name="authorField"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JTextField authorField;
    /**
	 * @uml.property  name="buttonGroup1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.ButtonGroup buttonGroup1;
    /**
	 * @uml.property  name="cancelButton"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JButton cancelButton;
    /**
	 * @uml.property  name="commonRb"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JRadioButton commonRb;
    /**
	 * @uml.property  name="jLabel2"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel jLabel2;
    /**
	 * @uml.property  name="jLabel3"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel jLabel3;
    /**
	 * @uml.property  name="jLabel4"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel jLabel4;
    /**
	 * @uml.property  name="jScrollPane1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JScrollPane jScrollPane1;
    /**
	 * @uml.property  name="jTextArea1"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JTextArea jTextArea1;
    /**
	 * @uml.property  name="msgLabel"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JLabel msgLabel;
    /**
	 * @uml.property  name="nameField"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JTextField nameField;
    /**
	 * @uml.property  name="okButton"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JButton okButton;
    /**
	 * @uml.property  name="synonymRb"
	 * @uml.associationEnd  multiplicity="(1 1)"
	 */
    private javax.swing.JRadioButton synonymRb;
    // End of variables declaration//GEN-END:variables
 
    
    

    /**
	 * @return  the concept
	 * @uml.property  name="concept"
	 */
    public Concept getConcept() {
        return concept;
    }

    /**
	 * @param concept  the concept to set
	 * @uml.property  name="concept"
	 */
    public void setConcept(Concept concept) {
        this.concept = concept;
    }
}
