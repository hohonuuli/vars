<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>vars-redux</artifactId>
        <groupId>vars-redux</groupId>
        <version>8.1-SNAPSHOT</version>
    </parent>
    <artifactId>vars-standalone</artifactId>
    <name>vars-standalone</name>

    <dependencies>

        <!--
            Reference the 3 VARS applications
        -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vars-query</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vars-annotation</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vars-knowledgebase</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Used by scripts for sending emails -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>${commons.email.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.ccil.cowan.tagsoup</groupId>
            <artifactId>tagsoup</artifactId>
            <version>${tagsoup.version}</version>
        </dependency>

        <!--
            Dependencies for referencing the EXPD database. Used for merges
        -->
        <dependency>
            <groupId>org.mbari</groupId>
            <artifactId>expd-core</artifactId>
            <version>${expd.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mbari</groupId>
            <artifactId>expd-jdbc</artifactId>
            <version>${expd.version}</version>
        </dependency>

        <!--
            Sanselan is used for accessing image metadata. Used for image loading
            scripts
        -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>sanselan</artifactId>
            <version>${sanselan.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-imaging</artifactId>
            <version>${commons.imaging.version}</version>
        </dependency>

        <!-- Need for loading SIMPA -->
        <!--<dependency>-->
            <!--<groupId>${project.groupId}</groupId>-->
            <!--<artifactId>vars-quicktime</artifactId>-->
            <!--<version>${project.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.mbari</groupId>-->
            <!--<artifactId>qtx4j</artifactId>-->
            <!--<version>${qtx4j.version}</version>-->
        <!--</dependency>-->

        <!--
            Scala related classes
        -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scalap</artifactId>
            <version>${scala.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
            <version>${jline.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.version.major}</artifactId>
            <version>${scalatest.version}</version>
        </dependency>

        <!--
            Scalar for doing the damn overlays
        -->
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>${scalr.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
                Generate an assembly
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/standalone-app.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                Include Scala compiler
            -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <scalaVersion>${scala.version}</scalaVersion>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <args>
                                <!-- DON'T USE OPTIMISE!! It causes the build to fail -->
                                <!-- arg>-optimise</arg -->
                                <arg>-unchecked</arg>
                                <arg>-deprecation</arg>
                                <arg>-feature</arg>
                                <arg>-language:implicitConversions</arg>
                                <!--<arg>-Xfatal-warnings</arg>-->
                            </args>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmArgs>
                        <jvmArg>-Xss2m</jvmArg>
                    </jvmArgs>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>true</useZincServer>
                </configuration>
            </plugin>

            <!--
                Run scalatest Specs during testing
            -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-surefire-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<includes>-->
                        <!--<include>**/*Spec.*</include>-->
                    <!--</includes>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
        </plugins>
    </reporting>

</project>


